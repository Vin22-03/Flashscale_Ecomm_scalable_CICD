pipeline {
    agent any

    environment {
        AWS_REGION   = "us-east-1"
        AWS_ACCOUNT  = "921483785411"
        BACKEND_REPO = "${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/flashscale-backend"
        FRONTEND_REPO = "${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/flashscale-frontend"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Vin22-03/Flashscale_Ecomm_scalable_CICD.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Login to AWS ECR') {
            steps {
                withAWS(region: "${AWS_REGION}", credentials: 'aws-ecr') {
                    sh '''
                        echo "üîë Logging into Amazon ECR..."
                        aws ecr get-login-password --region $AWS_REGION | \
                        docker login --username AWS --password-stdin $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com
                    '''
                }
            }
        }

        stage('Build Backend Docker Image') {
            steps {
                dir('backend') {
                    sh '''
                        echo "üî® Building Backend..."
                        docker build -t flashscale-backend:latest .
                        docker tag flashscale-backend:latest $BACKEND_REPO:latest
                    '''
                }
            }
        }

        stage('Build Frontend Docker Image') {
            steps {
                dir('frontend') {
                    sh '''
                        echo "üé® Building Frontend..."
                        docker build -t flashscale-frontend:latest .
                        docker tag flashscale-frontend:latest $FRONTEND_REPO:latest
                    '''
                }
            }
        }

        stage('Push Images to ECR') {
            steps {
                sh '''
                    echo "üì§ Pushing Backend Image..."
                    docker push $BACKEND_REPO:latest

                    echo "üì§ Pushing Frontend Image..."
                    docker push $FRONTEND_REPO:latest
                '''
            }
        }
    }
}

    post {
        success {
            echo "‚úÖ CI pipeline completed successfully! Image pushed to ECR."
        }
        failure {
            echo "‚ùå CI pipeline failed. Check logs."
        }
    }
}
